[
    {
        "description": [
            "<h2>Moving the draw point, and drawing lines</h2>",
            "<p>",
            "    The <em>CanvasRenderingContext2D</em> interface allows you to draw on the <em>canvas</em> element.",
            "    The <em>width</em> and <em>height</em> attributes of the <em>canvas</em> element indicate the range of the <em>x</em> and <em>y</em> value.",
            "    The top left corner of the <em>canvas</em> is at x=0, y=0, and the lower right corner is at x=1000, y=1000 in our case,", 
            "    because the <em>width</em> is 1000, and the <em>height</em> is also 1000.",
            "</p>",
            "<p>",
            "    You always need to start with a call to the <em>beginPath</em> method, and end with a call to the <em>closePath</em> method.",
            "    <code class=\"syntax\">void context.beginPath();",
            "    </code>",
            "    <code class=\"syntax\">void context.closePath();",
            "    </code>",
            "</p>",
            "<p>",
            "    To move the draw point, call the <em>moveTo</em> method.",
            "    <code class=\"syntax\">void context.moveTo(x, y);",
            "    <br/>x: The horizontal distance to the rigth of the left border of the canvas.",
            "    <br/>y: The vertical distance down from the top border of the canvas.",
            "    </code>",
            "</p>",
            "<p>",
            "    To make a line from the current draw point to another position, call the <em>lineTo</em> method.",
            "    <code class=\"syntax\">void context.lineTo(x, y);",
            "    <br/>x: The horizontal distance to the rigth of the left border of the canvas.",
            "    <br/>y: The vertical distance down from the top border of the canvas.",
            "    </code>",
            "</p>",
            "<p>",
            "    To draw the path that you have defined between <em>beginPath</em> and <em>closePath</em>, call the <em>stroke</em> method.",
            "    <code class=\"syntax\">void context.stroke();</code>",
            "</p>",
            "<h3>Assignment</h3>",
            "<p>",
            "    Make the canvas on the right marked <em>Assignment</em> look the same as the canvas on the left marked <em>Solution</em>.",
            "    Use the <em>moveTo</em> method to move the draw point to x=500, y=500.",
            "    Use the <em>lineTo</em> method to draw a line from that point to x=400, y=400.",
            "</p>",
            "<p>",
            "    Write your code in the editor box, and click the <b>Run</b> button to execute it.",
            "</p>"
        ],
        "solution": [
            "context.beginPath();",
            "context.moveTo(500, 500);",
            "context.lineTo(400, 400);",
            "context.closePath();",
            "context.stroke();"
        ],
        "template": [
            "context.beginPath();",
            "// TODO: Write your code here",
            "",
            "//",
            "context.closePath();",
            "context.stroke();"
        ]
    },
    {
        "description": [
            "<h2>Translate</h2>",
            "<p>You can move the whole coordinate system around by using the <em>translate</em> method.</p>",
            "    <code class=\"syntax\">void context.translate(x, y);",
            "    <br/>x: The horizontal distance to the rigth of the left border of the canvas.",
            "    <br/>y: The vertical distance down from the top border of the canvas.",
            "    </code>",
            "<p>If you want to <em>translate</em> the canvas, and go back to the previous state afterwards, you can use the <em>save</em> method before",
            "and the <em>restore</em> method after. In that way the canvas is back to the original state.",
            "</p>",
            "<p>",
            "Please note that it is the coordinate system that moves, and not the canvas. Therefore you must call <em>translate</em> before any <em>moveTo</em> or <em>lineTo</em>",
            "</p>",
            "<p>",
            "We will use the <em>translate</em> method to move the spaceship around",
            "</p>",
            "<h3>Assignment</h3>",
            "<p>",
            "    Add a call to the <em>translate</em> method so the coordinate system is moved 500 down",
            "    and 500 to the right.",
            "</p>",
            "<p>",
            "    Write your code in the editor box, and click the <b>Run</b> button to execute it.",
            "</p>"
        ],
        "solution": [
            "context.beginPath();",
            "context.moveTo(100, 100);",
            "context.lineTo(500,0);",
            "context.closePath();",
            "context.stroke();",
            "context.save();",
            "context.translate(500,500);",
            "context.beginPath();",
            "context.moveTo(0, 0);",
            "context.lineTo(500,0);",
            "context.closePath();",
            "context.stroke();",
            "context.restore();"
        ],
        "template": [
            "context.beginPath();",
            "context.moveTo(100, 100);",
            "context.lineTo(500,0);",
            "context.closePath();",
            "context.stroke();",
            "context.save();",
            "// TODO: Add a call to the translate method here",
            "context.beginPath();",
            "context.moveTo(0, 0);",
            "context.lineTo(500,0);",
            "context.closePath();",
            "context.stroke();",
            "context.restore();"
        ]
    },
    {
        "description": [
            "<h2>Rotate</h2>",
            "<p>You can rotate the whole coordinate system by using the <em>rotate</em> method.</p>",
            "    <code class=\"syntax\">void context.rotate(angle);",
            "    <br/>angle: The angle to rotate measured in radians.",
            "    </code>",
            "<p>The coordinate system is rotated clockwise, and the point of rotation is x=0, y=0.",
            "   So if you want to rotate in the center of the canvas, you need to translate first.",
            "</p>",
            "<p>",
            "The angle is measured in radians. Radians is the length you travel on the circumference for the angle in a circle where radius is 1.",
            "Since the circumference of such a circle is 2 times \u03a0 (PI) and the angle all around in a circle is 360 degrees, you can translate from radians to degrees like this:",
            "</p>",
            "    <code class=\"syntax\">var radians = degrees * Math.PI / 180;",
            "    <br/>degrees: The angle to rotate measured in degrees.",
            "    </code>",
            "<p>",
            "   Please note that it is the coordinate system that rotates, and not the canvas. Therefore you must call <em>rotate</em> before any <em>moveTo</em> or <em>lineTo</em>",
            "</p>",
            "<p>",
            "   We will use the <em>rotate</em> method to turn the spaceship.",
            "</p>",
            "<h3>Assignment</h3>",
            "<p>",
            "    Add a call to the <em>translate</em> method and a call to the <em>rotate</em> method so the coordinate system is rotated 45 degrees in the center.",
            "</p>",
            "<p>",
            "    Write your code in the editor box, and click the <b>Run</b> button to execute it.",
            "</p>"
        ],
        "solution": [
            "context.save();",
            "var degrees = 45;",
            "var radians = degrees * Math.PI / 180;",
            "var canvas = context.canvas;",
            "var width = canvas.width;",
            "var height = canvas.height;",
            "context.translate(width/2, height/2);",
            "context.rotate(radians);",
            "context.beginPath();",
            "context.moveTo(0, 0);",
            "context.lineTo(500,0);",
            "context.closePath();",
            "context.stroke();",
            "context.restore();"
        ],
        "template": [
            "context.save();",
            "var degrees = 45;",
            "// TODO: Calculate the angle in radians",
            "var canvas = context.canvas;",
            "var width = canvas.width;",
            "var height = canvas.height;",
            "context.translate(width/2, height/2);",
            "//TODO: Add call to the rotate method here",
            "context.beginPath();",
            "context.moveTo(0, 0);",
            "context.lineTo(500,0);",
            "context.closePath();",
            "context.stroke();",
            "context.restore();"
        ]
    }
]